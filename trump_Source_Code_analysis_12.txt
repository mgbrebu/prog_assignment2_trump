
Testing ./ ...

 ✗ [Medium] Cross-site Scripting (XSS) 
   Path: web/forum.jsp, line 74 
   Info: Unsanitized input from a database flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [Medium] Cross-site Scripting (XSS) 
   Path: web/forum.jsp, line 76 
   Info: Unsanitized input from a database flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [High] Cross-site Scripting (XSS) 
   Path: web/login.jsp, line 45 
   Info: Unsanitized input from cookies flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [High] Cross-site Scripting (XSS) 
   Path: web/login.jsp, line 46 
   Info: Unsanitized input from cookies flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [High] Cross-site Scripting (XSS) 
   Path: web/forumposts.jsp, line 45 
   Info: Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [High] Cross-site Scripting (XSS) 
   Path: web/forumposts.jsp, line 46 
   Info: Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [High] Cross-site Scripting (XSS) 
   Path: web/forumposts.jsp, line 47 
   Info: Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [High] SQL Injection 
   Path: web/forum.jsp, line 57 
   Info: Unsanitized input from an HTTP parameter flows into executeUpdate, where it is used in an SQL query. This may result in an SQL Injection vulnerability.

 ✗ [High] SQL Injection 
   Path: web/forumposts.jsp, line 43 
   Info: Unsanitized input from an HTTP parameter flows into executeQuery, where it is used in an SQL query. This may result in an SQL Injection vulnerability.

 ✗ [High] Path Traversal 
   Path: src/java/validate/ValidateForward.java, line 38 
   Info: Unsanitized input from an HTTP parameter flows into getRequestDispatcher, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.


✔ Test completed

Organization:      danb983
Test type:         Static code analysis
Project path:      ./

Summary:

  10 Code issues found
  8 [High]   2 [Medium] 


